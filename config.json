{
  "imageDecryptEval": "const matches = [..._encryptedString.matchAll(/(cdk|pth)\\s*=\\s*['\\\"](.*?)['\\\"]\\s*;?/gs)];const pageLinks = [];function atobCompat(t){const e=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";let s=String(t).replace(/=+$/,\"\");if(s.length%4===1)throw new Error(\"Invalid base64\");let n=\"\";for(let t=0,r,c,i=0;c=s.charAt(i++);~c&&(r=t%4?r*64+c:c,t++%4)?n+=String.fromCharCode(255&r>>(-2*t&6)):0)c=e.indexOf(c);return n}function decryptLink(raw){let url=raw.replace(/\\w{5}__\\w{3}__/g,\"g\").replace(/\\w{2}__\\w{6}_/g,\"a\").replace(/b/g,\"pw_.g28x\").replace(/h/g,\"d2pr.x_27\").replace(/pw_.g28x/g,\"b\").replace(/d2pr.x_27/g,\"h\");if(url.startsWith(\"https\"))return url;const q=url.indexOf(\"?\");const s=url.substring(q);let r=url.indexOf(\"=s0?\");if(r===-1)r=url.indexOf(\"=s1600?\");if(r===-1)return null;let c=url.substring(0,r);let decoded;try{decoded=decodeURIComponent(atobCompat(c))}catch{return null}if(!decoded.startsWith(\"MA\"))return null;return `https://2.bp.blogspot.com/${decoded}=s1600${s}`}matches.forEach(t=>{if(t[2]){try{const link=decryptLink(t[2]);if(link)pageLinks.push(link)}catch(_){}});JSON.stringify(pageLinks);",
  "postDecryptEval": null,
  "shouldVerifyLinks": false
}
